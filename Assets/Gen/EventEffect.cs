//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class EventEffect :  Bright.Config.BeanBase 
{
    public EventEffect(JSONNode _json) 
    {
        { if(!_json["EffectType"].IsNumber) { throw new SerializationException(); }  EffectType = (EffectType)_json["EffectType"].AsInt; }
        { if(!_json["Para1"].IsNumber) { throw new SerializationException(); }  Para1 = _json["Para1"]; }
        { if(!_json["Para2"].IsNumber) { throw new SerializationException(); }  Para2 = _json["Para2"]; }
        PostInit();
    }

    public EventEffect(EffectType EffectType, int Para1, int Para2 ) 
    {
        this.EffectType = EffectType;
        this.Para1 = Para1;
        this.Para2 = Para2;
        PostInit();
    }

    public static EventEffect DeserializeEventEffect(JSONNode _json)
    {
        return new EventEffect(_json);
    }

    public EffectType EffectType { get; private set; }
    public int Para1 { get; private set; }
    public int Para2 { get; private set; }

    public const int __ID__ = 1360913579;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "EffectType:" + EffectType + ","
        + "Para1:" + Para1 + ","
        + "Para2:" + Para2 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
